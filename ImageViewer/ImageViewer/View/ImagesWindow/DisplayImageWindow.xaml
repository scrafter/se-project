<Controls:MetroWindow x:Class="ImageViewer.View.ImagesWindow.DisplayImageWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageViewer.View.ImagesWindow"
        xmlns:model="clr-namespace:ImageViewer.ViewModel.ImageWindowViewModels"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:converter="clr-namespace:ImageViewer.Converters"
        xmlns:Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        mc:Ignorable="d"
        Title="Image Viewer" Height="300" Width="300"
        ResizeMode="CanResizeWithGrip" 
        ShowInTaskbar="True" 
        WindowState="Maximized"
        BorderBrush="#8BC34A"
        WindowTitleBrush="#8BC34A"
        WindowStartupLocation="CenterScreen"
        MinHeight="800" MinWidth="1200"
        Background="Black">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <Command:EventToCommand Command="{Binding ClosePIVsCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Key="D1" Command="{Binding DesynchronizationCommand}" CommandParameter="1"/>
        <KeyBinding Key="D2" Command="{Binding DesynchronizationCommand}" CommandParameter="2"/>
        <KeyBinding Key="D3" Command="{Binding DesynchronizationCommand}" CommandParameter="3"/>
        <KeyBinding Key="D4" Command="{Binding DesynchronizationCommand}" CommandParameter="4"/>
        <KeyBinding Key="D5" Command="{Binding DesynchronizationCommand}" CommandParameter="5"/>
        <KeyBinding Key="D6" Command="{Binding DesynchronizationCommand}" CommandParameter="6"/>
        <KeyBinding Key="D7" Command="{Binding DesynchronizationCommand}" CommandParameter="7"/>
        <KeyBinding Key="D8" Command="{Binding DesynchronizationCommand}" CommandParameter="8"/>
        <KeyBinding Key="D9" Command="{Binding DesynchronizationCommand}" CommandParameter="9"/>
    </Window.InputBindings>
    
    <Window.DataContext>
        <model:DisplayImageWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <converter:IsNullConverter x:Key="isNull"/>
        <Style TargetType="ContentControl" x:Key="ContentControlStyle">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentViewModel,Converter={StaticResource isNull}}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="UniformGrid" x:Key="UniformStyle">
            <Setter Property="Grid.Row" Value="2"/>
            <Setter Property="Grid.RowSpan" Value="1"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ToolbarVisibility}" Value="Collapsed">
                    <Setter Property="Grid.Row" Value="1"/>
                    <Setter Property="Grid.RowSpan" Value="2"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        

        <DataTemplate DataType="{x:Type model:ImagePresenterViewModel}">
            <local:ImagePresenterView/>
        </DataTemplate>
    </Window.Resources>

    <Grid Margin="0" ClipToBounds="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.2*" MinHeight="30"/>
            <RowDefinition Height="1.5*"/>
            <RowDefinition Height="8*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.RowSpan="1">
            <Button x:Name="ShowExplorer" Command="{Binding ShowToolbarCommand}" Margin="0, 0, 0, 5" Foreground="White" VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="16" Height="16"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" HorizontalAlignment="Center">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_arrow_down}"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </StackPanel>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#616161"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border CornerRadius="0, 0, 15, 15" Background="{TemplateBinding Background}" BorderThickness="0">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ToolbarVisibility}" Value="Collapsed">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFA6A6A6"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <UniformGrid Grid.Row="0" Grid.RowSpan="2" ClipToBounds="True">
            <UniformGrid.Style>
                <Style TargetType="UniformGrid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ToolbarVisibility}" Value="Collapsed">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </UniformGrid.Style>
            <local:ToolBarView/>
        </UniformGrid>

        <UniformGrid>
            <ContentControl Content="{Binding CurrentViewModel1,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel2,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel3,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel4,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel5,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel6,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel7,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel8,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel9,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <UniformGrid.Style>
                <Style TargetType="UniformGrid" BasedOn="{StaticResource UniformStyle}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding GridStatus}" Value="ThreeToThree">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </UniformGrid.Style>
        </UniformGrid>

        <UniformGrid>
            <ContentControl Content="{Binding CurrentViewModel1,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel2,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel3,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Content="{Binding CurrentViewModel4,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <UniformGrid.Style>
                <Style TargetType="UniformGrid" BasedOn="{StaticResource UniformStyle}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding GridStatus}" Value="TwoToTwo">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </UniformGrid.Style>
        </UniformGrid>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions >
            <ContentControl Grid.Column="0" Content="{Binding CurrentViewModel1,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <ContentControl Grid.Column="1" Content="{Binding CurrentViewModel2,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Grid.Row" Value="2"/>
                    <Setter Property="Grid.RowSpan" Value="1"/>
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding GridStatus}" Value="OneToTwo">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ToolbarVisibility}" Value="Collapsed">
                            <Setter Property="Grid.Row" Value="1"/>
                            <Setter Property="Grid.RowSpan" Value="2"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>

        <UniformGrid>
            <ContentControl Content="{Binding CurrentViewModel1,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContentControlStyle}"/>
            <UniformGrid.Style>
                <Style TargetType="UniformGrid" BasedOn="{StaticResource UniformStyle}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding GridStatus}" Value="OneToOne">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </UniformGrid.Style>
        </UniformGrid>


    </Grid>
</Controls:MetroWindow>
